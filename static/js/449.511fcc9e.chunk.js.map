{"version":3,"file":"static/js/449.511fcc9e.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/CastItem/CastItem.module.css?d4dc","components/CastItem/CastItem.jsx","components/Cast/Cast.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Gallery\":\"CastItem_Gallery__Jr5SU\",\"Portret\":\"CastItem_Portret__dvY9N\",\"Item\":\"CastItem_Item__mlK7i\"};","import React from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport SomePerson from \"assets/SomePerson.png\";\n\nimport styles from \"./CastItem.module.css\"\n\nconst CastItem = ({ cast }) => {\n    // const imgUrl = 'https://image.tmdb.org/t/p/w400';\n    return (\n        <ul className={styles.Gallery}>\n            {cast.map(actor => {\n                \n                return(\n                <li className={styles.Item} key={actor.id}>\n                    <img\n                        className={styles.Portret}\n                        src={\n                        actor?.profile_path\n                            ? `https://image.tmdb.org/t/p/original${actor?.profile_path}`\n                            : SomePerson}\n                        alt={actor.name || actor.original_name}\n                />\n                <p>{actor.name || actor.original_name} </p>\n                {actor?.character && <p>{actor?.character}</p>} \n                </li>\n                )}\n            )\n        }\n        </ul>\n    )\n}\n\nexport default CastItem;\n\nCastItem.propTypes = {\n    cast: PropTypes.arrayOf(PropTypes.shape(\n        {\n            id: PropTypes.number.isRequired,\n            profile_path: PropTypes.string,\n            name: PropTypes.string,\n            original_name: PropTypes.string,\n            character: PropTypes.string,\n        }\n    ))\n}","import React, { useState, useEffect } from \"react\";\n\nimport { useParams } from \"react-router-dom\";\n\nimport CastItem  from \"components/CastItem/CastItem\";\n\nimport  api  from 'services/api';\n\nimport Loader from 'components/Loader/Loader';\n\nconst Cast = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n  const errorMessage = \"Ууупс! Відбувся отріцатєльний поіск. Спробуйте ще раз\";\n  \n\n  useEffect(() => {\n    (async () => {\n      try {\n        setIsLoading(true);\n        setError(null);\n\n        const data = await api.fetchCast(movieId);\n        \n        setCast(data);\n      } catch (error) {\n        setError(true)\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {error && !isLoading && <div>{errorMessage}</div>}\n      {!error && !isLoading && cast.length > 0 && (<CastItem cast={cast} />)}\n      {!error && !isLoading && cast.length === 0 && (<h2>We don't have any cast for this movie</h2>)}     \n    </>\n  );\n};\n\nexport default Cast;\n","import axios from \"axios\";\n\nconst key = '278bf75944205bdb0a6474cdc0be106c'; \n\nasync function fetchTop() {\n    try {\n        const {data} = await axios.get(`https://api.themoviedb.org/3/trending/all/day?api_key=${key}`)\n        return data.results\n    } catch (error) {\n        throw new Error('Oops, we don`t have any movies');\n    }\n}\n\nasync function fetchMovie(filmName) {\n    try {\n        const {data} = await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${key}&query=${filmName}&language=en-US&page=1&per_page=12&include_adult=false`)\n        return data;\n    } catch (error) {\n        throw new Error('Oops, we don`t have any movies');\n    }\n}\n\nasync function fetchDetails(id) {\n    try {\n        const {data} = await axios.get(`https://api.themoviedb.org/3/movie/${id}?api_key=${key}&language=en-US`);\n        return data;\n    } catch (error) {\n        throw new Error('Oops, we don`t have any movies');\n    }\n}\nasync function fetchCast (movieId) {\n  try {\n    const { data } = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${key}`);\n    return data.cast;\n  } catch (error) {\n    throw new Error('Oops, there is no cast movie');\n  }\n};\n\nasync function  fetchReviews(movieId) {\n  try {\n    const { data } = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${key}`);\n    return data.results;\n  } catch (error) {\n    throw new Error('Oops, we don`t have any reviews');\n  }\n};\n    \nconst api = {\n    fetchTop,\n    fetchMovie,\n    fetchDetails,\n    fetchCast,\n    fetchReviews,    \n}\n\n\nexport default api;"],"names":["cast","className","styles","map","actor","src","profile_path","SomePerson","alt","name","original_name","character","id","useState","isLoading","setIsLoading","error","setError","setCast","movieId","useParams","useEffect","api","data","Loader","length","key","fetchTop","axios","results","Error","fetchMovie","filmName","fetchDetails","fetchCast","fetchReviews"],"sourceRoot":""}