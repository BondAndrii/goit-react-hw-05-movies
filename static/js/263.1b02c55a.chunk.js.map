{"version":3,"file":"static/js/263.1b02c55a.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ReviewsItem/ReviewsItem.module.css?9eab","components/ReviewsItem/ReviewsItem.jsx","components/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"List\":\"ReviewsItem_List__i5UNw\",\"Item\":\"ReviewsItem_Item__1Jb9K\"};","import React from \"react\";\n\nimport styles from \"./ReviewsItem.module.css\"\n\nconst ReviewsItem = ({reviews}) => {\n    return (\n        <ul className={styles.List}>\n                {reviews.map(author =>\n                    <li className={styles.Item} key={author.id}>\n                        <h3>Author: {author.author}</h3>\n                        <p>{ author.content}</p>\n                    </li>)}\n        </ul>\n    )\n}\n\nexport default ReviewsItem;","import React, { useState, useEffect } from \"react\";\n\nimport  ReviewsItem  from \"components/ReviewsItem/ReviewsItem\";\n\nimport api from 'services/api';\n\nimport { useParams } from \"react-router-dom\";\n\nconst Reviews = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n\n  useEffect(() => {\n    (async () => {\n      try {\n        setIsLoading(true);\n        setError(null);\n\n        const data = await api.fetchReviews(movieId);\n        setReviews(data);\n      } catch (error) {\n        console.log(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, [movieId]);\n\n  return (\n    <>\n        {isLoading && <div>Loading...</div>}\n        {error && !isLoading && <div>Try again</div>}\n      {!error && !isLoading && reviews.length > 0 ? (\n      <ReviewsItem reviews={reviews}/>) : (<h2>We don't have any reviews for this movie</h2>)}\n    </>\n  );\n};\n\nexport default Reviews;","import axios from \"axios\";\n\nconst key = '278bf75944205bdb0a6474cdc0be106c'; \n\nasync function fetchTop() {\n    try {\n        const {data} = await axios.get(`https://api.themoviedb.org/3/trending/all/day?api_key=${key}`)\n        // console.log(data.results);\n        return data.results\n    } catch (error) {\n        throw new Error('Oops, we don`t have any movies');\n    }\n}\n\nasync function fetchMovie(filmName) {\n    try {\n        const {data} = await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${key}&query=${filmName}&language=en-US&page=1&per_page=12&include_adult=false`)\n        // console.log(data.results);\n        return data;\n    } catch (error) {\n        throw new Error('Oops, we don`t have any movies');\n    }\n}\n\nasync function fetchDetails(id) {\n    try {\n        const {data} = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}?api_key=${key}&language=en-US`);\n        console.log(\"fetchDetails\", data);\n        return data;\n    } catch (error) {\n        throw new Error('Oops, we don`t have any movies');\n    }\n}\nasync function fetchCast (movieId) {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${key}`\n    );\n    // console.log(data.cast);\n    return data.cast;\n  } catch (error) {\n    throw new Error('Oops, there is no cast movie');\n  }\n};\n\nasync function  fetchReviews(movieId) {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${key}`\n    );\n    // console.log(data.results);\n    return data.results;\n  } catch (error) {\n    throw new Error('Oops, we don`t have any reviews');\n  }\n};\n    \nconst api = {\n    fetchTop,\n    fetchMovie,\n    fetchDetails,\n    fetchCast,\n    fetchReviews,    \n}\n\n\nexport default api;"],"names":["reviews","className","styles","map","author","content","id","useState","isLoading","setIsLoading","error","setError","setReviews","movieId","useParams","useEffect","api","data","console","log","message","length","key","fetchTop","axios","results","Error","fetchMovie","filmName","fetchDetails","fetchCast","cast","fetchReviews"],"sourceRoot":""}