{"version":3,"file":"static/js/263.07f6c5c4.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ReviewsItem/ReviewsItem.module.css?9eab","components/ReviewsItem/ReviewsItem.jsx","components/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"List\":\"ReviewsItem_List__i5UNw\",\"Item\":\"ReviewsItem_Item__1Jb9K\"};","import React from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport styles from \"./ReviewsItem.module.css\"\n\nconst ReviewsItem = ({reviews}) => {\n    return (\n        <ul className={styles.List}>\n            {reviews.map(author => {\n                // console.log(author)\n                return (\n                        <li className={styles.Item} key={author.id}>\n                        <h3>Author: {author.author}</h3>\n                        <p>{ author.content}</p>\n                    </li>)}\n                    )\n                }\n                    \n        </ul>\n    )\n}\n\nexport default ReviewsItem;\n\nReviewsItem.propTypes = {\n    reviews: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        author: PropTypes.string,\n        content: PropTypes.string,\n    }))\n}","import React, { useState, useEffect } from \"react\";\n\nimport  ReviewsItem  from \"components/ReviewsItem/ReviewsItem\";\n\nimport api from 'services/api';\n\nimport { useParams } from \"react-router-dom\";\n\nconst Reviews = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n  const message = \"Вибачте! Відбувся отріцатєльний пошук. Спробуйте знову\";\n\n\n  useEffect(() => {\n    (async () => {\n      try {\n        setIsLoading(true);\n        setError(null);\n\n        const data = await api.fetchReviews(movieId);\n        setReviews(data);\n      } catch (error) {\n        setError(true)\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, [movieId]);\n\n  return (\n    <>\n        {isLoading && <div>Loading...</div>}\n        {error && !isLoading && <div>{message }</div>}\n        {!error && !isLoading && reviews.length > 0 && (<ReviewsItem reviews={reviews} />)}\n        {!error && !isLoading && reviews.length === 0 && (<h2>We don't have any reviews for this movie</h2>)}\n      \n    </>\n  );\n};\n\nexport default Reviews;","import axios from \"axios\";\n\nconst key = '278bf75944205bdb0a6474cdc0be106c'; \n\nasync function fetchTop() {\n    try {\n        const {data} = await axios.get(`https://api.themoviedb.org/3/trending/all/day?api_key=${key}`)\n        return data.results\n    } catch (error) {\n        throw new Error('Oops, we don`t have any movies');\n    }\n}\n\nasync function fetchMovie(filmName) {\n    try {\n        const {data} = await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${key}&query=${filmName}&language=en-US&page=1&per_page=12&include_adult=false`)\n        return data;\n    } catch (error) {\n        throw new Error('Oops, we don`t have any movies');\n    }\n}\n\nasync function fetchDetails(id) {\n    try {\n        const {data} = await axios.get(`https://api.themoviedb.org/3/movie/${id}?api_key=${key}&language=en-US`);\n        return data;\n    } catch (error) {\n        throw new Error('Oops, we don`t have any movies');\n    }\n}\nasync function fetchCast (movieId) {\n  try {\n    const { data } = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${key}`);\n    return data.cast;\n  } catch (error) {\n    throw new Error('Oops, there is no cast movie');\n  }\n};\n\nasync function  fetchReviews(movieId) {\n  try {\n    const { data } = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${key}`);\n    return data.results;\n  } catch (error) {\n    throw new Error('Oops, we don`t have any reviews');\n  }\n};\n    \nconst api = {\n    fetchTop,\n    fetchMovie,\n    fetchDetails,\n    fetchCast,\n    fetchReviews,    \n}\n\n\nexport default api;"],"names":["reviews","className","styles","map","author","content","id","useState","isLoading","setIsLoading","error","setError","setReviews","movieId","useParams","useEffect","api","data","length","key","fetchTop","axios","results","Error","fetchMovie","filmName","fetchDetails","fetchCast","cast","fetchReviews"],"sourceRoot":""}