{"version":3,"file":"static/js/957.ce212f68.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Maper/Maper.module.css?d36b","components/Maper/Maper.jsx","webpack://react-homework-template/./src/components/SearchMovies/SearchMovies.module.css?b223","components/SearchMovies/SearchMovies.jsx","pages/Movies/Movies.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Maper\":\"Maper_Maper__4zIDv\",\"MaperItem\":\"Maper_MaperItem__v8LOy\"};","import React from \"react\";\n\nimport { Link, useLocation } from \"react-router-dom\";\n\nimport PropTypes from \"prop-types\";\n\nimport styles from \"./Maper.module.css\"\n\nconst Maper = ({data}) => {   \n    \n    const location = useLocation();\n    // console.log(data);\n    return (\n    <ul className={styles.Maper}>\n            {data.map(item => {\n                const { id, title, name } = item;\n                \n                return (\n                    <li key={id}>\n                        <Link\n                            className={styles.MaperItem}\n                            to={`/movies/${id}`}\n                            state={{ from: location }}                     \n                            \n                        >{title || name}</Link>\n                    </li>\n                )\n               \n            })}\n    </ul>\n    )\n     \n}\n\nexport default Maper;\n\nMaper.propTypes = {\n    data: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        title: PropTypes.string,\n        name: PropTypes.string,\n    }))\n}","// extracted by mini-css-extract-plugin\nexport default {\"Form\":\"SearchMovies_Form__yWMo8\"};","import React from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport { Field, Form, Formik } from 'formik';\n\nimport styles from \"./SearchMovies.module.css\"\n\nconst SearchMovies = ({onSubmit}) => {\n     return (\n        <>\n            <Formik\n                initialValues={{ query: ' ' }}\n                onSubmit={(values, { resetForm }) => {\n                onSubmit(values.query.trim());\n                resetForm();\n                }}\n            >\n                <Form className={styles.Form}>\n                <Field\n                    as=\"input\"\n                    autoComplete=\"off\"\n                    placeholder=\"Search movie...\"\n                    name=\"query\"\n                    autoFocus\n                />\n                <button type=\"submit\">Search</button>\n                </Form>\n             </Formik> \n         </>\n     )\n}   \n      \n\nexport default SearchMovies;\n \nSearchMovies.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n}","import React from \"react\";\n\nimport { useState, useEffect } from \"react\";\n\nimport {useSearchParams} from \"react-router-dom\";\n\nimport SearchMovies from \"components/SearchMovies/SearchMovies\";\n\nimport Maper from \"components/Maper/Maper\";\n\nimport api from \"services/api\";\n\nimport Loader from 'components/Loader/Loader';\n\n\nconst MoviesPage = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [films, setFilms] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') || '';\n  const message = \"Вибачте! Відбувся отріцатєльний пошук. Спробуйте знову\";\n\n  useEffect(() => {\n    (async () => {\n      try {\n        if (query === '') return;\n        setIsLoading(true);\n        setError(null);\n\n        const data = await api.fetchMovie(query);\n        \n        if (data.total_results === 0) {\n          // alert(\n          //   `Sorry, there are no images matching your search query '${query}'. Please try again.`\n          // );\n          return;\n        }\n        setFilms(data.results);\n      } catch (error) {\n        \n        setError(true)\n        // console.log(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, [query]);\n\n  const updateQueryString = value => {\n    if (value === '') {\n      setSearchParams({});\n      return;\n    }\n    setSearchParams({ query: value });\n    setFilms([]);\n  };\n\n  return (\n    <>      \n      <SearchMovies onSubmit={updateQueryString} />\n      {isLoading && <Loader/>}\n      {error && !isLoading && (<h2 style={{ textAlign: 'center' }}>{message}</h2>)}\n      {!error && !isLoading && films.length > 0 && (<Maper data={films} />)}\n    </>\n  );\n};\nexport default MoviesPage;\n\n\n","import axios from \"axios\";\n\nconst key = '278bf75944205bdb0a6474cdc0be106c'; \n\nasync function fetchTop() {\n    try {\n        const {data} = await axios.get(`https://api.themoviedb.org/3/trending/all/day?api_key=${key}`)\n        return data.results\n    } catch (error) {\n        throw new Error('Oops, we don`t have any movies');\n    }\n}\n\nasync function fetchMovie(filmName) {\n    try {\n        const {data} = await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${key}&query=${filmName}&language=en-US&page=1&per_page=12&include_adult=false`)\n        return data;\n    } catch (error) {\n        throw new Error('Oops, we don`t have any movies');\n    }\n}\n\nasync function fetchDetails(id) {\n    try {\n        const {data} = await axios.get(`https://api.themoviedb.org/3/movie/${id}?api_key=${key}&language=en-US`);\n        return data;\n    } catch (error) {\n        throw new Error('Oops, we don`t have any movies');\n    }\n}\nasync function fetchCast (movieId) {\n  try {\n    const { data } = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${key}`);\n    return data.cast;\n  } catch (error) {\n    throw new Error('Oops, there is no cast movie');\n  }\n};\n\nasync function  fetchReviews(movieId) {\n  try {\n    const { data } = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${key}`);\n    return data.results;\n  } catch (error) {\n    throw new Error('Oops, we don`t have any reviews');\n  }\n};\n    \nconst api = {\n    fetchTop,\n    fetchMovie,\n    fetchDetails,\n    fetchCast,\n    fetchReviews,    \n}\n\n\nexport default api;"],"names":["data","location","useLocation","className","styles","map","item","id","title","name","to","state","from","onSubmit","initialValues","query","values","resetForm","trim","as","autoComplete","placeholder","autoFocus","type","useState","isLoading","setIsLoading","error","setError","films","setFilms","useSearchParams","searchParams","setSearchParams","get","useEffect","api","total_results","results","value","Loader","style","textAlign","length","Maper","key","fetchTop","axios","Error","fetchMovie","filmName","fetchDetails","fetchCast","movieId","cast","fetchReviews"],"sourceRoot":""}