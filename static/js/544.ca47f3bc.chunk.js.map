{"version":3,"file":"static/js/544.ca47f3bc.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Maper/Maper.module.css?d36b","components/Maper/Maper.jsx","pages/Home/Home.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Maper\":\"Maper_Maper__4zIDv\",\"MaperItem\":\"Maper_MaperItem__v8LOy\"};","import React from \"react\";\n\nimport { Link, useLocation } from \"react-router-dom\";\n\nimport styles from \"./Maper.module.css\"\n\nconst Maper = ({ data,\n// getId\n}) => {\n    // console.log(\"searchList in Maper\", data)\n    \n    const location = useLocation();\n\n//    console.log(\"location in search\", location)\n\n    // const getId = (event) => {\n    //     const { id } = event.target;\n    //     onClick(id);      \n    // }\n    return (\n    <ul className={styles.Maper}>\n            {data.map(item => {\n                const { id, title, name } = item;\n                // console.log(\"in item\", item)\n                return (\n                    <li key={id}>\n                        <Link\n                            className={styles.MaperItem}\n                            to={`/movies/${id}`}\n                            state={{ from: location }}                        \n                            // id={id}\n                            // onClick={getId}\n                        >{title || name}\n                            \n                        </Link>\n                    </li>\n                )\n               \n            })}\n    </ul>\n    )\n     \n}\n\nexport default Maper;","import React, { useState, useEffect } from \"react\";\n\nimport Maper from \"components/Maper/Maper\";\n\nimport { useLocation } from \"react-router-dom\";\n\nimport api from \"services/api\";\n\n// const Home = ({ list, getId }) => {\n//   return (\n//         <Maper data={list} onClick={getId} />\n//     )\n// }\n\n// export default Home;\nconst Home = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    (async () => {\n        try {\n          setIsLoading(true);\n          setError(null);\n          const result = await api.fetchTrend()\n          // console.log(\"in result\", result)\n          setMovies(result)\n        } catch (error) {\n          console.error(\"error in fetchTrend\", error.message);\n        }finally{setIsLoading(false);}\n    })();\n  }, [])\n\n\n  return (\n    <>\n      {isLoading && <div>Loading...</div>}\n      {error && !isLoading && <div>Try again</div>}\n      {!error && !isLoading && movies.length > 0 &&  <Maper data={movies} state={{from: location}} />  }\n    </>\n  )\n}\n\nexport default Home;","import axios from \"axios\";\n\nconst key = '278bf75944205bdb0a6474cdc0be106c'; \n\nasync function fetchTrend() {\n    try {\n        const {data} = await axios.get(`https://api.themoviedb.org/3/trending/all/day?api_key=${key}`)\n        // console.log(data.results);\n        return data.results\n    } catch (error) {\n        throw new Error('Oops, we don`t have any movies');\n    }\n}\n\nasync function fetchMovie(filmName) {\n    try {\n        const {data} = await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${key}&query=${filmName}&language=en-US&page=1&per_page=12&include_adult=false`)\n        // console.log(data.results);\n        return data;\n    } catch (error) {\n        throw new Error('Oops, we don`t have any movies');\n    }\n}\n\nasync function fetchDetails(id) {\n    try {\n        const {data} = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}?api_key=${key}&language=en-US`);\n        console.log(\"fetchDetails\", data);\n        return data;\n    } catch (error) {\n        throw new Error('Oops, we don`t have any movies');\n    }\n}\nasync function fetchCast (movieId) {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${key}`\n    );\n    // console.log(data.cast);\n    return data.cast;\n  } catch (error) {\n    throw new Error('Oops, there is no cast movie');\n  }\n};\n\nasync function  fetchReviews(movieId) {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${key}`\n    );\n    // console.log(data.results);\n    return data.results;\n  } catch (error) {\n    throw new Error('Oops, we don`t have any reviews');\n  }\n};\n// async function fetchTop() {\n\n    \n//     let list = [];\n//     await axios.get(`https://api.themoviedb.org/3/trending/all/day?api_key=${key}`)\n//         .then(responce => {\n//             // console.log(\"in fetchTop\", responce.data.results)\n//             if (responce.data.results.length > 0) {\n//                 list = responce.data.results;\n//                 return\n//             }\n//                 return\n            \n            \n//         }).catch(error => console.log(\"in fetchTop\", error))\n           \n            \n              \n//     return list;\n// }\n\n// export async function getTrendingMovies() {\n//   try {\n//     const {data} = await axios.get(\n//       `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}&include_adult=false`\n//     );\n//     return data;\n//   } catch (error) {\n//     throw new Error('Oops, we don`t have any movies');\n//   }\n// }\n\n// async function fetchMovie(filmName) {\n//     let list = [];\n//     await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${key}&query=${filmName}&language=en-US&page=1&per_page=12&include_adult=false`)\n//         .then(responce => {\n//             // console.log(\"in fetchMovie\", responce.data.results)\n//             if (responce.data.results.length > 0) {\n//                 list = responce.data.results;\n//                 return\n//             }\n//             return\n//         })\n//     return list;\n// }\n\n// async function fetchDetails(id) {\n//     let obj = {};\n//     await axios.get(`https://api.themoviedb.org/3/movie/${id}?api_key=${key}&language=en-US`)\n//         .then(responce => {\n//             // console.log(\"in fetchDetails\", responce.data)\n//             if (responce.data) {\n//                 obj = responce.data;\n//                 return\n//             }\n//             return\n//         })\n//     return obj;\n// }\n\n// async function fetchReviews(id) {\n//     let list = [];\n//     await axios.get(`https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${key}&language=en-US&page=1`)\n//         .then(responce => {\n//             // console.log(\"in fetchReviews\", responce.data.results)\n//             if (responce.data.results.length > 0) {\n//                 list = responce.data.results;\n//                 return\n//             }\n//             return\n//         })\n//     return list;\n// }\n\n// async function fetchCast(id) {\n//     let list = [];\n//     await axios.get(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=${key}&language=en-US`)\n//         .then(responce => {\n//             // console.log(\"in fetchTop\", responce.data.cast)\n//             if (responce.data.cast.length > 0) {\n//                 list = responce.data.cast;\n//                 return\n//             }\n//             return\n//         })\n//     return list;\n// }\n\n\n    \nconst api = {\n    // fetchTop,\n    fetchMovie,\n    fetchDetails,\n    fetchCast,\n    fetchReviews,\n    fetchTrend,\n}\n\n\nexport default api;"],"names":["data","location","useLocation","className","styles","map","item","id","title","name","to","state","from","useState","isLoading","setIsLoading","error","setError","movies","setMovies","useEffect","api","result","console","message","length","key","fetchTrend","axios","results","Error","fetchMovie","filmName","fetchDetails","log","fetchCast","movieId","cast","fetchReviews"],"sourceRoot":""}