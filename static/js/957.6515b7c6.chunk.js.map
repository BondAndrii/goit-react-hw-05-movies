{"version":3,"file":"static/js/957.6515b7c6.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Maper/Maper.module.css?d36b","components/Maper/Maper.jsx","webpack://react-homework-template/./src/components/SearchMovies/SearchMovies.module.css?b223","components/SearchMovies/SearchMovies.jsx","pages/Movies/Movies.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Maper\":\"Maper_Maper__4zIDv\",\"MaperItem\":\"Maper_MaperItem__v8LOy\"};","import React from \"react\";\n\nimport { Link, useLocation } from \"react-router-dom\";\n\nimport styles from \"./Maper.module.css\"\n\nconst Maper = ({ data}) => {\n    \n    \n    const location = useLocation();\n\n    return (\n    <ul className={styles.Maper}>\n            {data.map(item => {\n                const { id, title, name } = item;\n                \n                return (\n                    <li key={id}>\n                        <Link\n                            className={styles.MaperItem}\n                            to={`/movies/${id}`}\n                            state={{ from: location }}                     \n                            \n                        >{title || name}</Link>\n                    </li>\n                )\n               \n            })}\n    </ul>\n    )\n     \n}\n\nexport default Maper;","// extracted by mini-css-extract-plugin\nexport default {\"Form\":\"SearchMovies_Form__yWMo8\"};","import React from \"react\";\n\nimport { Field, Form, Formik } from 'formik';\n\nimport styles from \"./SearchMovies.module.css\"\n\nconst SearchMovies = ({onSubmit}) => {\n     return (\n        <>\n            <Formik\n                initialValues={{ query: ' ' }}\n                onSubmit={(values, { resetForm }) => {\n                onSubmit(values.query.trim());\n                resetForm();\n                }}\n            >\n                <Form className={styles.Form}>\n                <Field\n                    as=\"input\"\n                    autoComplete=\"off\"\n                    placeholder=\"Search movie...\"\n                    name=\"query\"\n                    autoFocus\n                />\n                <button type=\"submit\">Search</button>\n                </Form>\n             </Formik> \n         </>\n     )\n}\n   \n      \n\nexport default SearchMovies;\n ","import React from \"react\";\n\nimport { useState, useEffect } from \"react\";\n\nimport { useLocation, useSearchParams} from \"react-router-dom\";\n\nimport SearchMovies from \"components/SearchMovies/SearchMovies\";\n\nimport Maper from \"components/Maper/Maper\";\n\nimport api from \"services/api\";\n\nconst MoviesPage = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [films, setFilms] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') || '';\n  const location = useLocation();\n\n  useEffect(() => {\n    (async () => {\n      try {\n        if (query === '') return;\n        setIsLoading(true);\n        setError(null);\n\n        const data = await api.fetchMovie(query);\n        \n        if (data.total_results === 0) {\n          alert(\n            `Sorry, there are no images matching your search query '${query}'. Please try again.`\n          );\n          return '';\n        }\n        setFilms(data.results);\n      } catch (error) {\n        console.log(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, [query, location.search]);\n\n  const updateQueryString = value => {\n    if (value === '') {\n      setSearchParams({});\n      return;\n    }\n    setSearchParams({ query: value });\n    setFilms([]);\n  };\n\n  return (\n    <>      \n      <SearchMovies onSubmit={updateQueryString} />\n      {isLoading && <div>Loading...</div>}\n      {error && !isLoading && (<h2 style={{ textAlign: 'center' }}>Try again.</h2>)}\n      {!error && !isLoading && films.length > 0 && (<Maper data={films} state={{ from: location }} />)}\n    </>\n  );\n};\nexport default MoviesPage;\n\n\n","import axios from \"axios\";\n\nconst key = '278bf75944205bdb0a6474cdc0be106c'; \n\nasync function fetchTop() {\n    try {\n        const {data} = await axios.get(`https://api.themoviedb.org/3/trending/all/day?api_key=${key}`)\n        // console.log(data.results);\n        return data.results\n    } catch (error) {\n        throw new Error('Oops, we don`t have any movies');\n    }\n}\n\nasync function fetchMovie(filmName) {\n    try {\n        const {data} = await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${key}&query=${filmName}&language=en-US&page=1&per_page=12&include_adult=false`)\n        // console.log(data.results);\n        return data;\n    } catch (error) {\n        throw new Error('Oops, we don`t have any movies');\n    }\n}\n\nasync function fetchDetails(id) {\n    try {\n        const {data} = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}?api_key=${key}&language=en-US`);\n        console.log(\"fetchDetails\", data);\n        return data;\n    } catch (error) {\n        throw new Error('Oops, we don`t have any movies');\n    }\n}\nasync function fetchCast (movieId) {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${key}`\n    );\n    // console.log(data.cast);\n    return data.cast;\n  } catch (error) {\n    throw new Error('Oops, there is no cast movie');\n  }\n};\n\nasync function  fetchReviews(movieId) {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${key}`\n    );\n    // console.log(data.results);\n    return data.results;\n  } catch (error) {\n    throw new Error('Oops, we don`t have any reviews');\n  }\n};\n    \nconst api = {\n    fetchTop,\n    fetchMovie,\n    fetchDetails,\n    fetchCast,\n    fetchReviews,    \n}\n\n\nexport default api;"],"names":["data","location","useLocation","className","styles","map","item","id","title","name","to","state","from","onSubmit","initialValues","query","values","resetForm","trim","as","autoComplete","placeholder","autoFocus","type","useState","isLoading","setIsLoading","error","setError","films","setFilms","useSearchParams","searchParams","setSearchParams","get","useEffect","api","total_results","alert","results","console","log","message","search","value","style","textAlign","length","Maper","key","fetchTop","axios","Error","fetchMovie","filmName","fetchDetails","fetchCast","movieId","cast","fetchReviews"],"sourceRoot":""}