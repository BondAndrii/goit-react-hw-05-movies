{"version":3,"file":"static/js/135.c0f527d7.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"GoBack\":\"MovieDetails_GoBack__yiz0d\",\"Banner\":\"MovieDetails_Banner__DKSTa\",\"StandartInform\":\"MovieDetails_StandartInform__m2-OU\",\"Inform\":\"MovieDetails_Inform__XDs3z\",\"Navigation\":\"MovieDetails_Navigation__WwkDP\",\"Genres\":\"MovieDetails_Genres__6YSgc\",\"GenresItem\":\"MovieDetails_GenresItem__dF1md\"};","import React, { useEffect, useRef, useState } from \"react\";\n\nimport {\n    Link, Outlet,\n    useLocation,\n    useParams\n} from \"react-router-dom\";\n\nimport  api  from 'services/api';\n\nimport styles from \"./MovieDetails.module.css\"\n\nimport NoPoster from \"../../assets/NoPoster.png\"\n\nimport { Suspense } from \"react\";\n\n\n\nconst MovieDetails = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [movieData, setMovieData] = useState([]);\n    const { movieId } = useParams();\n    console.log(useParams())\n  console.log(\"in movieDetails\", movieId);\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    (async () => {\n      try {\n        setIsLoading(true);\n        setError(null);\n\n        const data = await api.fetchDetails(movieId);\n        console.log(data);\n        setMovieData(data);\n      } catch (error) {\n        console.log(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, [movieId]);\n\n    \nconst Score = Math.round( movieData?.vote_average * 10);\nconst Genres = movieData?.genres?.map(genre => genre.name).join(', ');\n\n  return (\n    <>\n       {isLoading && <div>Loading...</div>}\n      {error && !isLoading && (\n        <h2 style={{ textAlign: 'center' }}>Try again.</h2>)}\n      {!error && !isLoading && movieData && (\n        <div>\n          <Link className={styles.GoBack} to={backLinkLocationRef.current}  > Go Back </Link>\n          <div className={styles.StandartInform}>\n            <img\n               className={styles.Banner}\n              src={\n                movieData?.poster_path\n                  ? `https://image.tmdb.org/t/p/original${movieData?.poster_path}`\n                  : NoPoster\n              }\n              alt={movieData?.title || movieData?.original_title}              \n            />\n            <div className={styles.Inform}>\n            <h2>{movieData?.title || movieData?.original_title}</h2>\n            <p>User score: {Score}</p>\n            {movieData?.overview?.length > 0 && (\n              <>\n                <h3>Overview</h3>\n                <p>{movieData?.overview}</p>\n              </>\n            )}\n            {movieData?.genres?.length > 0 && (\n              <>\n                <h4>Genres</h4>\n                <p>{Genres}</p>\n              </>\n            )}\n          </div>\n          </div>          \n        </div>\n      )}\n      <>\n        \n        <nav className={styles.Navigation}>       \n            <h2>Additional information</h2>\n              <Link to=\"cast\" state={{ from: location }}>Cast</Link>         \n              <Link to=\"reviews\" state={{ from: location }}>Reviews</Link>           \n        </nav>\n      </>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;","import axios from \"axios\";\n\nconst key = '278bf75944205bdb0a6474cdc0be106c'; \n\nasync function fetchTop() {\n    try {\n        const {data} = await axios.get(`https://api.themoviedb.org/3/trending/all/day?api_key=${key}`)\n        // console.log(data.results);\n        return data.results\n    } catch (error) {\n        throw new Error('Oops, we don`t have any movies');\n    }\n}\n\nasync function fetchMovie(filmName) {\n    try {\n        const {data} = await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${key}&query=${filmName}&language=en-US&page=1&per_page=12&include_adult=false`)\n        // console.log(data.results);\n        return data;\n    } catch (error) {\n        throw new Error('Oops, we don`t have any movies');\n    }\n}\n\nasync function fetchDetails(id) {\n    try {\n        const {data} = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}?api_key=${key}&language=en-US`);\n        console.log(\"fetchDetails\", data);\n        return data;\n    } catch (error) {\n        throw new Error('Oops, we don`t have any movies');\n    }\n}\nasync function fetchCast (movieId) {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${key}`\n    );\n    // console.log(data.cast);\n    return data.cast;\n  } catch (error) {\n    throw new Error('Oops, there is no cast movie');\n  }\n};\n\nasync function  fetchReviews(movieId) {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${key}`\n    );\n    // console.log(data.results);\n    return data.results;\n  } catch (error) {\n    throw new Error('Oops, we don`t have any reviews');\n  }\n};\n    \nconst api = {\n    fetchTop,\n    fetchMovie,\n    fetchDetails,\n    fetchCast,\n    fetchReviews,    \n}\n\n\nexport default api;"],"names":["useState","isLoading","setIsLoading","error","setError","movieData","setMovieData","movieId","useParams","console","log","location","useLocation","backLinkLocationRef","useRef","state","from","useEffect","api","data","message","Score","Math","round","vote_average","Genres","genres","map","genre","name","join","style","textAlign","className","styles","to","current","src","poster_path","NoPoster","alt","title","original_title","overview","length","Suspense","fallback","key","fetchTop","axios","results","Error","fetchMovie","filmName","fetchDetails","id","fetchCast","cast","fetchReviews"],"sourceRoot":""}