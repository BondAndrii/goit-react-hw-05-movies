{"version":3,"file":"static/js/247.23ee70bd.chunk.js","mappings":"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","sources":["components/Cast/Cast.jsx","services/api.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\n// import CastItem  from \"components/CastItem/CastItem\";\n\nimport  api  from 'services/api';\n\n// import styles from \"./Cast.module.css\"\nimport { useParams } from \"react-router-dom\";\nimport NoPoster from \"assets/SomePerson.png\";\n\nconst Cast = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n  // console.log(movieId);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        setIsLoading(true);\n        setError(null);\n\n        const data = await api.fetchCast(movieId);\n        // console.log(data);\n        setCast(data);\n      } catch (error) {\n        console.log(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, [movieId]);\n\n  return (\n    <>\n      {/* Перевіряємо, чи відбувається завантаження */}\n        {isLoading && <div>Loading...</div>}\n      {error && !isLoading && <div>Try again</div>}\n      {!error && !isLoading && cast.length > 0 ? (\n        <ul>\n          {cast.map(cast => (\n            <li key={cast.id}>\n              <img\n                src={\n                  cast?.profile_path\n                    ? `https://image.tmdb.org/t/p/original${cast?.profile_path}`\n                    : NoPoster\n                }\n                alt={cast.name || cast.original_name}\n                width=\"200\"\n              />\n              <p>{cast.name || cast.original_name} </p>\n              {cast?.character && <p>{cast?.character}</p>}\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <h2>We don't have any cast for this movie</h2>\n      )}\n    </>\n  );\n};\n\n// const Cast = ({castId}) => {\n//     const [cast, setCast] = useState([]);\n//     // console.log(\"castId\", castId)\n//     useEffect(() => {    \n//         api.fetchCast(castId).then(cast => {setCast(cast)}).catch(error => console.log(error));  \n//   }, [castId]);\n\n//     return (\n//         <div className={styles.Cast}>\n//             {cast.length > 0 ? <CastItem cast={cast } /> : (<h3>We don't have any casts for this movie </h3>)}                 \n//         </div>\n//     )\n// }\n\nexport default Cast;\n","import axios from \"axios\";\n\nconst key = '278bf75944205bdb0a6474cdc0be106c'; \n\nasync function fetchTrend() {\n    try {\n        const {data} = await axios.get(`https://api.themoviedb.org/3/trending/all/day?api_key=${key}`)\n        // console.log(data.results);\n        return data.results\n    } catch (error) {\n        throw new Error('Oops, we don`t have any movies');\n    }\n}\n\nasync function fetchMovie(filmName) {\n    try {\n        const {data} = await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${key}&query=${filmName}&language=en-US&page=1&per_page=12&include_adult=false`)\n        // console.log(data.results);\n        return data;\n    } catch (error) {\n        throw new Error('Oops, we don`t have any movies');\n    }\n}\n\nasync function fetchDetails(id) {\n    try {\n        const {data} = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}?api_key=${key}&language=en-US`);\n        console.log(\"fetchDetails\", data);\n        return data;\n    } catch (error) {\n        throw new Error('Oops, we don`t have any movies');\n    }\n}\nasync function fetchCast (movieId) {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${key}`\n    );\n    // console.log(data.cast);\n    return data.cast;\n  } catch (error) {\n    throw new Error('Oops, there is no cast movie');\n  }\n};\n\nasync function  fetchReviews(movieId) {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${key}`\n    );\n    // console.log(data.results);\n    return data.results;\n  } catch (error) {\n    throw new Error('Oops, we don`t have any reviews');\n  }\n};\n// async function fetchTop() {\n\n    \n//     let list = [];\n//     await axios.get(`https://api.themoviedb.org/3/trending/all/day?api_key=${key}`)\n//         .then(responce => {\n//             // console.log(\"in fetchTop\", responce.data.results)\n//             if (responce.data.results.length > 0) {\n//                 list = responce.data.results;\n//                 return\n//             }\n//                 return\n            \n            \n//         }).catch(error => console.log(\"in fetchTop\", error))\n           \n            \n              \n//     return list;\n// }\n\n// export async function getTrendingMovies() {\n//   try {\n//     const {data} = await axios.get(\n//       `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}&include_adult=false`\n//     );\n//     return data;\n//   } catch (error) {\n//     throw new Error('Oops, we don`t have any movies');\n//   }\n// }\n\n// async function fetchMovie(filmName) {\n//     let list = [];\n//     await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${key}&query=${filmName}&language=en-US&page=1&per_page=12&include_adult=false`)\n//         .then(responce => {\n//             // console.log(\"in fetchMovie\", responce.data.results)\n//             if (responce.data.results.length > 0) {\n//                 list = responce.data.results;\n//                 return\n//             }\n//             return\n//         })\n//     return list;\n// }\n\n// async function fetchDetails(id) {\n//     let obj = {};\n//     await axios.get(`https://api.themoviedb.org/3/movie/${id}?api_key=${key}&language=en-US`)\n//         .then(responce => {\n//             // console.log(\"in fetchDetails\", responce.data)\n//             if (responce.data) {\n//                 obj = responce.data;\n//                 return\n//             }\n//             return\n//         })\n//     return obj;\n// }\n\n// async function fetchReviews(id) {\n//     let list = [];\n//     await axios.get(`https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${key}&language=en-US&page=1`)\n//         .then(responce => {\n//             // console.log(\"in fetchReviews\", responce.data.results)\n//             if (responce.data.results.length > 0) {\n//                 list = responce.data.results;\n//                 return\n//             }\n//             return\n//         })\n//     return list;\n// }\n\n// async function fetchCast(id) {\n//     let list = [];\n//     await axios.get(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=${key}&language=en-US`)\n//         .then(responce => {\n//             // console.log(\"in fetchTop\", responce.data.cast)\n//             if (responce.data.cast.length > 0) {\n//                 list = responce.data.cast;\n//                 return\n//             }\n//             return\n//         })\n//     return list;\n// }\n\n\n    \nconst api = {\n    // fetchTop,\n    fetchMovie,\n    fetchDetails,\n    fetchCast,\n    fetchReviews,\n    fetchTrend,\n}\n\n\nexport default api;"],"names":["useState","isLoading","setIsLoading","error","setError","cast","setCast","movieId","useParams","useEffect","api","data","console","log","message","length","map","src","profile_path","NoPoster","alt","name","original_name","width","character","id","key","fetchTrend","axios","results","Error","fetchMovie","filmName","fetchDetails","fetchCast","fetchReviews"],"sourceRoot":""}